# Generated by Django 5.2.5 on 2025-10-02 13:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admissions', '0001_initial'),
        ('programs', '0004_program_campuses'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('is_locked', models.BooleanField(default=False, help_text='Peut être débloqué après prérequis.')),
            ],
            options={
                'ordering': ['module_id', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(help_text='Ex: 2025-2026', max_length=32, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ModuleUE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Ex: GYNE101', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('coefficient', models.DecimalField(decimal_places=2, default=1.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('credits', models.DecimalField(decimal_places=1, default=6.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0.5)])),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['semester_id', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='GradeAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(help_text='assignment|exam|semester', max_length=32)),
                ('context_id', models.CharField(max_length=64)),
                ('before', models.JSONField(blank=True, null=True)),
                ('after', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('video_file', models.FileField(blank=True, upload_to='masters/videos/')),
                ('external_url', models.URLField(blank=True)),
                ('resource_file', models.FileField(blank=True, upload_to='masters/resources/')),
                ('is_published', models.BooleanField(default=False)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='masters.chapter')),
            ],
            options={
                'ordering': ['chapter_id', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='MasterEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('SUSPENDED', 'Suspendu'), ('WITHDRAWN', 'Abandonné'), ('COMPLETED', 'Terminé')], default='ACTIVE', max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admission', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='master_enrollment', to='admissions.admission')),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='masters.cohort')),
                ('program', models.ForeignKey(limit_choices_to={'cycle': 'MASTER'}, on_delete=django.db.models.deletion.CASCADE, related_name='master_enrollments', to='programs.program')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('seconds_watched', models.PositiveIntegerField(default=0)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='masters.lesson')),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='masters.masterenrollment')),
            ],
        ),
        migrations.CreateModel(
            name='MasterProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Code interne Master (ex: M-GYNE-M1)', max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('default_ects_per_semester', models.PositiveSmallIntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('rattrapage_take_max', models.BooleanField(default=True, help_text='Si vrai: garde la meilleure note (rattrapage vs normal).')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.OneToOneField(limit_choices_to={'cycle': 'MASTER'}, on_delete=django.db.models.deletion.CASCADE, related_name='master_meta', to='programs.program')),
            ],
            options={
                'verbose_name': 'Master (métadonnées)',
                'verbose_name_plural': 'Masters (métadonnées)',
            },
        ),
        migrations.CreateModel(
            name='ModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to='masters.masterenrollment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='masters.moduleue')),
            ],
        ),
        migrations.CreateModel(
            name='InstructorAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('LEAD', 'Responsable UE'), ('ASSIST', 'Assistant')], default='LEAD', max_length=8)),
                ('is_active', models.BooleanField(default=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_teachings', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='masters.moduleue')),
            ],
        ),
        migrations.AddField(
            model_name='chapter',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='masters.moduleue'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('QCM', 'QCM'), ('DM', 'Devoir Maison'), ('PRJ', 'Projet'), ('CAS', 'Étude de cas')], default='QCM', max_length=4)),
                ('title', models.CharField(max_length=220)),
                ('slug', models.SlugField(blank=True, max_length=220)),
                ('description', models.TextField(blank=True)),
                ('open_at', models.DateTimeField(blank=True, null=True)),
                ('close_at', models.DateTimeField(blank=True, null=True)),
                ('total_points', models.DecimalField(decimal_places=2, default=20.0, max_digits=6, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('coefficient', models.DecimalField(decimal_places=2, default=1.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('eval_kind', models.CharField(choices=[('CC', 'Contrôle Continu'), ('TP', 'Travaux Pratiques'), ('EX', 'Examen / Partiel'), ('FN', 'Final'), ('RA', 'Rattrapage')], default='CC', max_length=2)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assignments', to=settings.AUTH_USER_MODEL)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments', to='masters.chapter')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='masters.moduleue')),
            ],
            options={
                'ordering': ['module_id', 'open_at', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: S1, S2, S3, S4', max_length=32)),
                ('order', models.PositiveSmallIntegerField(default=1)),
                ('ects_target', models.PositiveSmallIntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(60)])),
                ('is_unlocked_by_default', models.BooleanField(default=False, help_text='Sinon, déblocage quand le semestre précédent est validé.')),
                ('is_locked', models.BooleanField(default=False)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
                ('cohort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='semesters', to='masters.cohort')),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_semesters', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(limit_choices_to={'cycle': 'MASTER'}, on_delete=django.db.models.deletion.CASCADE, related_name='master_semesters', to='programs.program')),
            ],
            options={
                'ordering': ['program_id', 'cohort_id', 'order'],
            },
        ),
        migrations.AddField(
            model_name='moduleue',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='masters.semester'),
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=220)),
                ('slug', models.SlugField(blank=True, max_length=220)),
                ('eval_kind', models.CharField(choices=[('CC', 'Contrôle Continu'), ('TP', 'Travaux Pratiques'), ('EX', 'Examen / Partiel'), ('FN', 'Final'), ('RA', 'Rattrapage')], default='EX', max_length=2)),
                ('coefficient', models.DecimalField(decimal_places=2, default=1.0, max_digits=4, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('total_points', models.DecimalField(decimal_places=2, default=20.0, max_digits=6, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('start_at', models.DateTimeField(blank=True, null=True)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='masters.semester')),
            ],
            options={
                'ordering': ['semester_id', 'start_at', 'id'],
            },
        ),
        migrations.CreateModel(
            name='SemesterResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_20', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('credits_earned', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('decision', models.CharField(blank=True, choices=[('ADM', 'Admis'), ('AJ', 'Ajourné'), ('RAT', 'Rattrapage'), ('EXC', 'Exclu')], max_length=3, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
                ('computed_at', models.DateTimeField(blank=True, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_results', to='masters.masterenrollment')),
                ('locked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locked_results', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='masters.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('SUBMITTED', 'Soumis'), ('GRADED', 'Noté'), ('LATE', 'En retard')], default='DRAFT', max_length=10)),
                ('uploaded_file', models.FileField(blank=True, upload_to='masters/submissions/')),
                ('answer_text', models.TextField(blank=True)),
                ('score_raw', models.DecimalField(blank=True, decimal_places=3, help_text='Score sur total_points', max_digits=7, null=True)),
                ('note_20', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)])),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='masters.assignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_no', models.PositiveSmallIntegerField(default=1)),
                ('score_raw', models.DecimalField(decimal_places=3, max_digits=7, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('note_20', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)])),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='masters.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_exam_grades', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_exam_grades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['exam', 'student'], name='masters_exa_exam_id_b2a2c3_idx')],
                'unique_together': {('exam', 'student', 'attempt_no')},
            },
        ),
        migrations.AddIndex(
            model_name='masterenrollment',
            index=models.Index(fields=['student', 'program', 'cohort'], name='masters_mas_student_b71b4b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='masterenrollment',
            unique_together={('student', 'program', 'cohort')},
        ),
        migrations.AlterUniqueTogether(
            name='lessonprogress',
            unique_together={('enrollment', 'lesson')},
        ),
        migrations.AlterUniqueTogether(
            name='moduleprogress',
            unique_together={('enrollment', 'module')},
        ),
        migrations.AddIndex(
            model_name='instructorassignment',
            index=models.Index(fields=['module', 'instructor'], name='masters_ins_module__f8d9f1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='instructorassignment',
            unique_together={('instructor', 'module')},
        ),
        migrations.AlterUniqueTogether(
            name='chapter',
            unique_together={('module', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='assignment',
            unique_together={('module', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='semester',
            unique_together={('program', 'cohort', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='moduleue',
            unique_together={('semester', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='exam',
            unique_together={('semester', 'slug')},
        ),
        migrations.AddIndex(
            model_name='semesterresult',
            index=models.Index(fields=['enrollment', 'semester'], name='masters_sem_enrollm_f0655e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='semesterresult',
            unique_together={('enrollment', 'semester')},
        ),
        migrations.AddIndex(
            model_name='submission',
            index=models.Index(fields=['assignment', 'student'], name='masters_sub_assignm_dd7a38_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='submission',
            unique_together={('assignment', 'student')},
        ),
    ]
